name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "16"
      - run: sudo apt-get install xvfb
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      - run: xvfb-run yarn ci
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - run: yarn ci
        if: ${{ matrix.os != 'ubuntu-latest' }}
  # integration-test:
  #   runs-on: ubuntu-latest
  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       ports:
  #         - 3306:3306
  #       env:
  #         MYSQL_DATABASE: bdash_test
  #         MYSQL_ROOT_PASSWORD: ""
  #         MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     postgres:
  #       image: postgres:13-alpine
  #       ports:
  #         - 5432:5432
  #       env:
  #         POSTGRES_USER: bdash_test
  #         POSTGRES_DB: bdash_test
  #         POSTGRES_PASSWORD: password
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: "16"
  #     - run: sudo apt-get install xvfb
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v4
  #       id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - run: yarn --prefer-offline
  #     - run: xvfb-run yarn test:unit:remote
  #       env:
  #         POSTGRES_USER: bdash_test
  #         PGPASSWORD: password
